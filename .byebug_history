q
subject.routes.first.pattern === "/users"
subject.routes.first.pattern
req.path
subject.routes.first.pattern === req.path
req.path
c
n
s
q
subject.routes.first.pattern === "/users"
subject.routes.first.pattern === "/user"
subject.routes.first.pattern === "user"
subject.routes.first.pattern === "users"
subject.routes.first.pattern =~ "users"
subject.routes.first.pattern =~ users
subject.routes.first.pattern =~ "user"
subject.routes.first.pattern =~ "users"
subject.routes.first.pattern
subject.routes.first
matched
q
subject.routes.first.pattern
subject.routes.first.pattern=~ req.path
subject.routes.first.pattern =~ req.path
req.path
subject.routes.first.pattern == req.path
subject.routes.first.pattern == "users"
subject.routes.first.pattern =~ "users"
req.path
subject.routes.first.pattern =~ req.path
subject.routes.first.pattern 
subject.routes.first.pattern =~ req.path
subject.pattern =~ req.path
subject
req.path
exit
index_route.pattern
req.path == index_route.pattern
req.path
q
req.path
index_route.pattern
index_route.pattern != req.path
index_route.pattern == req.path
_ == req.path
index_route.pattern
index_route.pattern.match(req.path)
index_routes.pattern.match(req.path)
q
index_route.pattern
req.path == index_route.pattern
req.request_method
req.path
index_route
req
c
req.request
req.parts
req.params
req.credentials
req
c
cats_controller.session['test_key'] = 'test_value'
q
n
c
cats_controller.session
cas_controller.session
session
cookie
cookie_val
cats_controller.session
cookie
cookie_val
cats_controller.session
cookie_val
n
cookie
n
cookie
q
cookie_val
cookie_hash
n
cookie_hash
c
cookie_val
cookie_vall
cookie_hash[:pho]
cookie_hash
n
JSON.parse(cookie_val)
cookie_val
cookie_hash
c
n
cookie_hash
n
cookie_hash
n
cookie["_rails_lite_app"]
cookie["_rails_lite_app
cookie
cookie["_rails_lie_app"]
cookie["_fails_lie_app"]
cookie
n
cookie
n
session['pho']
cookie_hash['pho']
session
n
session.store_session(res)
session.sotre_session(res)
session
